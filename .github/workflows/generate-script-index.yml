name: Generate Script Index

on:
  workflow_dispatch: # Allow manual trigger
  repository_dispatch:
    types: [scripts-updated]

jobs:
  generate-index:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout scripts repository
        uses: actions/checkout@v4
        with:
          repository: flarialmc/scripts
          token: ${{ secrets.GITHUB_TOKEN }}
          path: scripts-repo
      
      - name: Checkout marketplace repository
        uses: actions/checkout@v4
        with:
          path: marketplace-repo
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Generate script indices
        run: |
          cd scripts-repo
          
          # Generate module index
          echo "Generating module index..."
          module_files=$(find module -name "*.lua" -type f | sort)
          echo "[" > module-index.json
          first=true
          for file in $module_files; do
            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> module-index.json
            fi
            filename=$(basename "$file" .lua)
            # Extract metadata from the Lua file
            name=$(grep -m1 "^name = " "$file" | sed 's/name = "\(.*\)"/\1/' | sed "s/name = '\(.*\)'/\1/")
            description=$(grep -m1 "^description = " "$file" | sed 's/description = "\(.*\)"/\1/' | sed "s/description = '\(.*\)'/\1/")
            author=$(grep -m1 "^author = " "$file" | sed 's/author = "\(.*\)"/\1/' | sed "s/author = '\(.*\)'/\1/")
            version=$(grep -m1 "^version = " "$file" | sed 's/version = "\(.*\)"/\1/' | sed "s/version = '\(.*\)'/\1/")
            
            # Use filename as fallback for name
            if [ -z "$name" ]; then
              name="$filename"
            fi
            if [ -z "$version" ]; then
              version="1.0.0"
            fi
            
            echo -n "  {" >> module-index.json
            echo -n "\"filename\": \"$(basename "$file")\", " >> module-index.json
            echo -n "\"name\": \"$name\", " >> module-index.json
            echo -n "\"description\": \"$description\", " >> module-index.json
            echo -n "\"author\": \"$author\", " >> module-index.json
            echo -n "\"version\": \"$version\", " >> module-index.json
            echo -n "\"type\": \"module\", " >> module-index.json
            echo -n "\"path\": \"$file\"" >> module-index.json
            echo -n "}" >> module-index.json
          done
          echo "" >> module-index.json
          echo "]" >> module-index.json
          
          # Generate command index
          echo "Generating command index..."
          command_files=$(find command -name "*.lua" -type f | sort)
          echo "[" > command-index.json
          first=true
          for file in $command_files; do
            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> command-index.json
            fi
            filename=$(basename "$file" .lua)
            # Extract metadata from the Lua file
            name=$(grep -m1 "^name = " "$file" | sed 's/name = "\(.*\)"/\1/' | sed "s/name = '\(.*\)'/\1/")
            description=$(grep -m1 "^description = " "$file" | sed 's/description = "\(.*\)"/\1/' | sed "s/description = '\(.*\)'/\1/")
            author=$(grep -m1 "^author = " "$file" | sed 's/author = "\(.*\)"/\1/' | sed "s/author = '\(.*\)'/\1/")
            version=$(grep -m1 "^version = " "$file" | sed 's/version = "\(.*\)"/\1/' | sed "s/version = '\(.*\)'/\1/")
            
            # Use filename as fallback for name
            if [ -z "$name" ]; then
              name="$filename"
            fi
            if [ -z "$version" ]; then
              version="1.0.0"
            fi
            
            echo -n "  {" >> command-index.json
            echo -n "\"filename\": \"$(basename "$file")\", " >> command-index.json
            echo -n "\"name\": \"$name\", " >> command-index.json
            echo -n "\"description\": \"$description\", " >> command-index.json
            echo -n "\"author\": \"$author\", " >> command-index.json
            echo -n "\"version\": \"$version\", " >> command-index.json
            echo -n "\"type\": \"command\", " >> command-index.json
            echo -n "\"path\": \"$file\"" >> command-index.json
            echo -n "}" >> command-index.json
          done
          echo "" >> command-index.json
          echo "]" >> command-index.json
          
          echo "Generated indices:"
          echo "Module scripts: $(cat module-index.json | grep -c '"filename"')"
          echo "Command scripts: $(cat command-index.json | grep -c '"filename"')"
      
      - name: Commit and push index files
        run: |
          cd scripts-repo
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add module-index.json command-index.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update script indices [skip ci]"
            git push
          fi